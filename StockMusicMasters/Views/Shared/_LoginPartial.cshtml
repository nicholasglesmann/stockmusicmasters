@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item text-right">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
            </li>
            @if (User.IsInRole("Admin"))
            {
                <li class="nav-item text-right">
                    <a class="nav-link text-light" asp-area="" asp-controller="Admin" asp-action="Index">Admin</a>
                </li>
            }
            <li class="nav-item text-right">
                <a class="nav-link text-light" asp-area="" asp-controller="Home" asp-action="Music">Music</a>
            </li>
            <li class="nav-item align-self-end">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout-button" type="submit" class="nav-link bg-transparent text-light border-0">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item text-right">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Log in</a>
            </li>
            <li class="nav-item text-right">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Sign up</a>
            </li>
        }
    </ul>
